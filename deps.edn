{:paths
 ["src" "resources" "target/classes"]

 :deps/prep-lib
 {:alias :build
  :fn compile
  :ensure "target/classes"}

 :deps
 {;; The actual SQL Parser to wrap!
  com.github.jsqlparser/jsqlparser {:mvn/version "5.0"}
  ;; Get environment variables and Java properties
  environ/environ                  {:mvn/version "1.2.0"}
  ;; Schema-checking
  metosin/malli                    {:mvn/version "0.18.0"}
  ;; import-vars!
  potemkin/potemkin                {:mvn/version "0.4.7"}}


 :aliases
 {:dev
  {:extra-deps
   {hashp/hashp                 {:mvn/version "0.2.2"}
    io.github.metabase/hawk     {:mvn/version "1.0.0"}
    org.clojure/tools.namespace {:mvn/version "1.4.5"}
    virgil/virgil               {:mvn/version "0.3.0"}}

   :extra-paths
   ["test" "test/resources"]

   :jvm-opts
   ["-Dmacaw.run.mode=dev"
    "-Duser.timezone=UTC"
    "-Duser.language=en"
    "-Duser.country=US"
    ;; if compilation on launch fails or whatever print to console instead of a temp file.
    "-Dclojure.main.report=stderr"
    ;; [LEVEL logger-name] message stacktrace
    "-Djava.util.logging.SimpleFormatter.format=%n[%4$s %3$s] %5$s%n%6$s%n"
    ;; Exceptions that get thrown repeatedly are created without stacktraces as a performance optimization in newer Java
    ;; versions. This makes debugging pretty hard when working on stuff locally -- prefer debuggability over performance
    ;; for local dev work.
    "-XX:-OmitStackTraceInFastThrow"
    ;; ignore options that aren't present in older versions of Java, like the one below:
    "-XX:+IgnoreUnrecognizedVMOptions"
    ;; include more details for debugging NPEs (Java 14+)
    "-XX:+ShowCodeDetailsInExceptionMessages"]}

  ;; clojure -M:check
  :check
  {:extra-deps {athos/clj-check {:git/url "https://github.com/athos/clj-check.git"
                                 :sha     "518d5a1cbfcd7c952f548e6dbfcb9a4a5faf9062"}}
   :main-opts  ["-m" "clj-check.check"]}

  ;; clj -T:whitespace-linter
  :whitespace-linter
  {:deps       {com.github.camsaul/whitespace-linter {:sha "e35bc252ccf5cc74f7d543ef95ad8a3e5131f25b"}}
   :ns-default whitespace-linter
   :exec-fn    whitespace-linter/lint
   :exec-args  {:paths            ["deps.edn" "src" "java" "test" ".github"]
                :include-patterns ["\\.clj[cs]?$" "\\.edn$" "\\.java$" "\\.yaml$" "\\.md$"]}}

  ;; Run tests
  ;;
  ;; clojure -X:dev:test
  :test
  {:exec-fn  mb.hawk.core/find-and-run-tests-cli
   :jvm-opts ["-Dmacaw.run.mode=test"]}

  ;; clojure -T:build
  :build
  {:deps       {io.github.clojure/tools.build {:mvn/version "0.9.6"}
                slipset/deps-deploy           {:mvn/version "0.2.1"}}
   :ns-default build}}}
